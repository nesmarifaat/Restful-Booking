<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="DESKTOP-B3C9E0N" failures="1" tests="6" name="E2E Scenarios" time="8.343" errors="0" timestamp="2025-01-05T22:27:28 EET">
  <testcase classname="testcases.TC01_CreateToken" name="createtokenwithvaliddata_P" time="2.464"/>
  <testcase classname="testcases.TC02_CreateBooking" name="createbookingwithvaliddata_P" time="1.104"/>
  <testcase classname="testcases.TC03_UpdateBooking" name="updateallbooking_P" time="1.16"/>
  <testcase classname="testcases.TC03_UpdateBooking" name="partialupdateforfirstlastname_P" time="1.074"/>
  <testcase classname="testcases.TC04_DeleteBooking" name="deletebookingwithvaliddata_P" time="1.172"/>
  <testcase classname="testcases.TC04_GetUpdatedBookings" name="getupdatedbooking_P" time="1.085">
    <failure type="java.lang.AssertionError" message="1 expectation failed.
Expected status code &amp;lt;200&amp;gt; but was &amp;lt;404&amp;gt;.
">
      <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at testcases.TC04_GetUpdatedBookings.getupdatedbooking_P(TC04_GetUpdatedBookings.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
... Removed 35 stack frames]]>
    </failure>
  </testcase> <!-- getupdatedbooking_P -->
  <testcase classname="testcases.TC02_CreateBooking" name="createbookingwithinvalidmethod_N" time="0.0">
    <ignored/>
  </testcase> <!-- createbookingwithinvalidmethod_N -->
  <testcase classname="testcases.TestBase" name="@BeforeTest Setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest Setup -->
  <testcase classname="testcases.TC01_CreateToken" name="createtokenwithinvalidmethod" time="0.0">
    <ignored/>
  </testcase> <!-- createtokenwithinvalidmethod -->
  <testcase classname="testcases.TC02_CreateBooking" name="createbookingwithinvalidpayload_N" time="0.0">
    <ignored/>
  </testcase> <!-- createbookingwithinvalidpayload_N -->
  <testcase classname="testcases.TestBase" name="@BeforeTest Setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest Setup -->
  <testcase classname="testcases.TC01_CreateToken" name="createtokenwithinvalidpath_N" time="0.0">
    <ignored/>
  </testcase> <!-- createtokenwithinvalidpath_N -->
  <testcase classname="testcases.TC02_CreateBooking" name="createbookingwithinvalidpath_N" time="0.0">
    <ignored/>
  </testcase> <!-- createbookingwithinvalidpath_N -->
  <testcase classname="testcases.TC03_UpdateBooking" name="updatewithinvalidmethod_N" time="0.0">
    <ignored/>
  </testcase> <!-- updatewithinvalidmethod_N -->
  <testcase classname="testcases.TestBase" name="@BeforeTest Setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest Setup -->
  <testcase classname="testcases.TC01_CreateToken" name="createtokenwithinvalidcredentials_N" time="0.0">
    <ignored/>
  </testcase> <!-- createtokenwithinvalidcredentials_N -->
  <testcase classname="testcases.TC03_UpdateBooking" name="updatebookingwithinvalidpath_N" time="0.0">
    <ignored/>
  </testcase> <!-- updatebookingwithinvalidpath_N -->
  <testcase classname="testcases.TestBase" name="@BeforeTest Setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest Setup -->
</testsuite> <!-- E2E Scenarios -->
